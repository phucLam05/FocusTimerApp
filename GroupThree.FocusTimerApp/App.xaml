<Application x:Class="GroupThree.FocusTimerApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:GroupThree.FocusTimerApp.ViewModels"
             xmlns:views="clr-namespace:GroupThree.FocusTimerApp.Views">
    <Application.Resources>
        <!-- Default Theme Colors (Dark Mode) -->
        <Color x:Key="WindowBackgroundColor">#1a1f2e</Color>
        <Color x:Key="HeaderBackgroundColor">#252b3d</Color>
        <Color x:Key="SidebarBackgroundColor">#1e2332</Color>
        <Color x:Key="CardBackgroundColor">#252b3d</Color>
        <Color x:Key="PrimaryButtonColor">#6366f1</Color>
        <Color x:Key="PrimaryButtonHoverColor">#7c3aed</Color>
        <Color x:Key="SecondaryButtonColor">#3f4458</Color>
        <Color x:Key="SecondaryButtonHoverColor">#4a5068</Color>
        <Color x:Key="ProgressBackgroundColor">#2d3548</Color>
        <Color x:Key="ProgressForegroundColor">#6366f1</Color>
        <Color x:Key="TextPrimaryColor">#ffffff</Color>
        <Color x:Key="TextSecondaryColor">#9ca3af</Color>
        <Color x:Key="BorderColor">#374151</Color>
        
        <!-- Brushes -->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}" />
        <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource HeaderBackgroundColor}" />
        <SolidColorBrush x:Key="SidebarBackgroundBrush" Color="{StaticResource SidebarBackgroundColor}" />
        <SolidColorBrush x:Key="CardBackgroundBrush" Color="{StaticResource CardBackgroundColor}" />
        <SolidColorBrush x:Key="PrimaryButtonBrush" Color="{StaticResource PrimaryButtonColor}" />
        <SolidColorBrush x:Key="PrimaryButtonHoverBrush" Color="{StaticResource PrimaryButtonHoverColor}" />
        <SolidColorBrush x:Key="SecondaryButtonBrush" Color="{StaticResource SecondaryButtonColor}" />
        <SolidColorBrush x:Key="SecondaryButtonHoverBrush" Color="{StaticResource SecondaryButtonHoverColor}" />
        <SolidColorBrush x:Key="ProgressBackgroundBrush" Color="{StaticResource ProgressBackgroundColor}" />
        <SolidColorBrush x:Key="ProgressForegroundBrush" Color="{StaticResource ProgressForegroundColor}" />
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}" />
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}" />
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />

        <!-- Modern Button Style -->
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SecondaryButtonBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="20,10" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryButtonHoverBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="{StaticResource PrimaryButtonBrush}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryButtonHoverBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Icon Button Style -->
        <Style x:Key="IconButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryButtonBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="#2d3548" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="BorderBrush" Value="#6366f1" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Padding" Value="12,8" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="CaretBrush" Value="#FFFFFF" />
            <Setter Property="SelectionBrush" Value="#6366f1" />
            <Setter Property="SelectionOpacity" Value="0.4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        Foreground="{TemplateBinding Foreground}"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#7c3aed" />
                                <Setter TargetName="border" Property="BorderThickness" Value="3" />
                                <Setter TargetName="border" Property="Background" Value="#3f4458" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#8b5cf6" />
                                <Setter TargetName="border" Property="Background" Value="#374151" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ComboBox Style -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource SecondaryButtonBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="12,8" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Height" Value="40" />
        </Style>

        <!-- Modern CheckBox Style -->
        <Style x:Key="ModernCheckBox" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <Border x:Name="Border"
                                    Grid.Column="0"
                                    Width="20"
                                    Height="20"
                                    Background="{StaticResource SecondaryButtonBrush}"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Margin="0,0,8,0">
                                <Path x:Name="CheckMark"
                                      Data="M 0,5 L 4,9 L 10,0"
                                      Stroke="{StaticResource TextPrimaryBrush}"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"
                                      Margin="5" />
                            </Border>
                            
                            <ContentPresenter Grid.Column="1"
                                            VerticalAlignment="Center" />
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryButtonBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryButtonBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryButtonBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ToggleButton Style (for Switch) -->
        <Style x:Key="ModernToggleSwitch" TargetType="ToggleButton">
            <Setter Property="Width" Value="44" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="SwitchBorder"
                                    Background="{StaticResource SecondaryButtonBrush}"
                                    CornerRadius="12"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="1" />
                            
                            <Ellipse x:Name="SwitchThumb"
                                     Width="18"
                                     Height="18"
                                     Fill="{StaticResource TextPrimaryBrush}"
                                     HorizontalAlignment="Left"
                                     Margin="3,0,0,0">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform x:Name="ThumbTransform" X="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="SwitchBorder" Property="Background" Value="{StaticResource PrimaryButtonBrush}" />
                                <Setter TargetName="SwitchBorder" Property="BorderBrush" Value="{StaticResource PrimaryButtonBrush}" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform"
                                                           Storyboard.TargetProperty="X"
                                                           To="20"
                                                           Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform"
                                                           Storyboard.TargetProperty="X"
                                                           To="0"
                                                           Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="SwitchBorder" Property="BorderBrush" Value="{StaticResource PrimaryButtonBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ProgressBar Style -->
        <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
            <Setter Property="Background" Value="{StaticResource ProgressBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ProgressForegroundBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="4" />
                            <Border Name="PART_Track"
                                    CornerRadius="4">
                                <Border Name="PART_Indicator"
                                        Background="{TemplateBinding Foreground}"
                                        CornerRadius="4"
                                        HorizontalAlignment="Left" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataTemplates -->
        <DataTemplate DataType="{x:Type vm:GeneralSettingsViewModel}">
            <views:GeneralSettingsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:NotificationSettingsViewModel}">
            <views:NotificationSettingsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:TimerSettingsViewModel}">
            <views:TimerSettingsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:HotkeySettingsViewModel}">
            <views:HotkeySettingsView />
        </DataTemplate>
    </Application.Resources>
</Application>
